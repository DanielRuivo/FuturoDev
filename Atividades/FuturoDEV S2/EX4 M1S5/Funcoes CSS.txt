(tag)Usamos as próprias tags do html como <p> o que normalmente nomeamos no html com uma tag chamada de <class>
    onde a usamos dentro de uma tag, como por exemplo <p class="paragrafo">, onde a tag class é um atributo que podemos usar para estilizar o elemento.
    que é usado no documento de CSS desse jeito:
    
    .p{
        aqui colocamos o que quremos estilizar com outros diversos comandos.
    }
    
    (id)Usado igual a class, mas com a diferença que o id serve para estilizar apenas um elemento como <p id="paragrafo">, enquanto a class pode ser usada em diversos elementos.
    E no CSS ficaria assim:
    
    #paragrafo{
        aqui colocamos o que quremos estilizar com outros diversos comandos.
    }
    
    (*)Usamos o asterisco para estilizar todos os elementos de uma vez, como por exemplo:
    
    *{
        aqui colocamos o que quremos estilizar com outros diversos comandos.
    }
    
(Seletor de descendência)Usamos o seletor de descendência para estilizar um elemento que está dentro de outro elemento, como por exemplo:

div p {
    aqui colocamos o que quremos estilizar com outros diversos comandos.
}

Isso singnifica que estamos estilizando todos os elementos <p> que estão dentro de um elemento <div>.

(Flex box)Usamos o flexbox para alinhar os elementos de uma maneira mais fácil, como por exemplo:
    
    .container{
        display: flex;
        aqui colocamos o que quremos estilizar com outros diversos comandos.
    }
Aqui podemos usar diversos comandos como flex-direction , entre outros, que tem funções diferentes.

(Flex-direction)Usamos o flex-direction para alinhar os elementos dentro do container, como por exemplo:
    
    .container{
        display: flex;
        flex-direction: column;
    }
Aqui podemos usar diversos comandos como justify-content , entre outros, que tem funções diferentes.

(Justify-content)Usamos o justify-content para alinhar os elementos dentro do container, como por exemplo:
    
    .container{
        display: flex;
        justify-content: center;
    }
Aqui podemos usar diversos comandos como  align-items , entre outros, que tem funções diferentes.

(Align-items)Usamos o align-items para alinhar os elementos dentro do container, como por exemplo:
    
    .container{
        display: flex;
        align-items: center;
    }
Aqui podemos usar diversos comandos como  flex-wrap , entre outros, que tem funções diferentes.

(Flex-wrap)Usamos o flex-wrap para alinhar os elementos dentro do container, como por exemplo:
    
    .container{
        display: flex;
        flex-wrap: wrap;
    }   
Aqui podemos usar diversos comandos como  align-content , entre outros, que tem funções diferentes.

(Align-content)Usamos o align-content para alinhar os elementos dentro do container, como por exemplo:
    
    .container{
        display: flex;
        align-content: center;
    }
Aqui podemos usar diversos comandos, que tem funções diferentes.

(CSS Grid)Usamos o CSS Grid para alinhar os elementos de uma maneira mais fácil, como por exemplo:
    
    .container{
        display: grid;
        aqui colocamos o que quremos estilizar com outros diversos comandos.
    }
Aqui podemos usar diversos comandos como grid-template-columns , entre outros, que tem funções diferentes.

(Grid-template-columns)Usamos o grid-template-columns para alinhar os elementos dentro do container, como por exemplo:
    
    .container{
        display: grid;
        grid-template-columns: 1fr 1fr 1fr;
    }
Aqui podemos usar diversos comandos como grid-template-rows , entre outros, que tem funções diferentes.

(Grid-template-rows)Usamos o grid-template-rows para alinhar os elementos dentro do container, como por exemplo:
    
    .container{
        display: grid;
        grid-template-rows: 1fr 1fr 1fr;
    }   
Aqui podemos usar diversos comandos como gap , entre outros, que tem funções diferentes.

(Gap)Usamos o gap para alinhar os elementos dentro do container, como por exemplo:
    
    .container{
        display: grid;
        gap: 10px;
    }
Aqui podemos usar diversos comandos como justify-items , entre outros, que tem funções diferentes.

(Justify-items)Usamos o justify-items para alinhar os elementos dentro do container, como por exemplo:
    
    .container{
        display: grid;
        justify-items: center;
    }
Aqui podemos usar diversos comandos como align-items , entre outros, que tem funções diferentes.

(Align-items)Usamos o align-items para alinhar os elementos dentro do container, como por exemplo:
    
    .container{
        display: grid;
        align-items: center;
    }
Aqui podemos usar diversos comandos como grid-column , entre outros, que tem funções diferentes.

(Grid-column)Usamos o grid-column para alinhar os elementos dentro do container, como por exemplo:
    
    .container{
        display: grid;
        grid-column: 1 / 3;
    }
Aqui podemos usar diversos comandos como grid-row , entre outros, que tem funções diferentes.

(Grid-row)Usamos o grid-row para alinhar os elementos dentro do container, como por exemplo:
    
    .container{
        display: grid;
        grid-row: 1 / 3;
    }
Aqui podemos usar diversos comandos, que tem funções diferentes.
